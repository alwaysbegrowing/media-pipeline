name: Test Lambdas

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 576758376358.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Make Logs Directory
        run: mkdir logs

      - name: Update NPM
        run: sudo npm i -g npm@latest

      - name: Install CDK
        run: sudo npm i -g aws-cdk

      - name: Install Dependencies
        run: pip3 install -r requirements.txt

      - name: CDK Synth
        run: cdk synth RenderLambdaStack --no-staging > template.yaml

      - name: Render Lambda
        run: |
          sam local invoke FinalRendererCB91BC08 --env-vars env.json --event ./events/renderEvent.json -l ./logs/render.txt

      - name: Test Render
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/render.txt

      - name: Notification Lambda
        run: |
          sam local invoke Notify29C25B1B --env-vars env.json --event ./events/notifyStepEvent.json -l ./logs/stepNotify.txt

      - name: Test Step Notification
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/stepNotify.txt

      - name: Downloader Lambda
        run: |
          cd lambdas/downloader
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > docker.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY}}" >> docker.env
          echo "AWS_REGION=us-east-1" >> docker.env
          echo "AWS_DEFAULT_REGION=us-east-1" >> docker.env
          echo "AWS_LAMBDA_FUNCTION_MEMORY=1024" >> docker.env
          docker build -t downloader-test .
          docker run -d -p 9000:8080 --env-file docker.env downloader-test
          python ../../scripts/post.py "http://localhost:9000/2015-03-31/functions/function/invocations" ../../events/downloadEvent.json > ../../logs/downloader.json

      - name: Test Downloader
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/downloader.json
